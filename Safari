import os
import time
import requests
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.safari.service import Service as SafariService
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# Enable Safari Automation: Run this in Terminal
# safaridriver --enable

# Set up Safari WebDriver
driver = webdriver.Safari(service=SafariService())
driver.maximize_window()

# File Paths
DOWNLOADS_PATH = f"/Users/yourusername/Downloads/"
EUROPEANA_IMAGE = os.path.join(DOWNLOADS_PATH, "europeana_image.jpg")
CROPPED_IMAGE = os.path.join(DOWNLOADS_PATH, "cropped_image.jpg")
MONSTER_MASH_MODEL = os.path.join(DOWNLOADS_PATH, "monstermash_3d_model.obj")

API_KEY = "nanodydecti"
QUERY = "sculpture"
SEGMENT_ANYTHING_URL = "https://segment-anything.com/"
MONSTER_MASH_URL = "https://monstermash.zone/"

### Step 1: Download Image from Europeana
def download_europeana_image():
    url = f"https://api.europeana.eu/record/v2/search.json?query={QUERY}&rows=1&wskey={API_KEY}"
    response = requests.get(url).json()

    if "items" in response and response["items"]:
        image_url = response["items"][0].get("edmPreview")
        if image_url:
            img_data = requests.get(image_url).content
            with open(EUROPEANA_IMAGE, "wb") as img_file:
                img_file.write(img_data)
            print(f"Image saved: {EUROPEANA_IMAGE}")
        else:
            print("No valid image found.")
    else:
        print("No images returned from Europeana.")

### Step 2: Crop Image with Segment Anything
def segment_image():
    driver.get(SEGMENT_ANYTHING_URL)
    
    upload_button = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//input[@type='file']"))
    )
    upload_button.send_keys(EUROPEANA_IMAGE)
    print("Image uploaded to Segment Anything!")

    time.sleep(10)

    download_button = driver.find_element(By.XPATH, "//button[contains(text(), 'Download')]")
    download_button.click()
    print(f"Cropped image saved: {CROPPED_IMAGE}")

    time.sleep(5)

### Step 3: Upload Cropped Image to Monster Mash
def upload_to_monster_mash():
    driver.get(MONSTER_MASH_URL)

    upload_button = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//input[@type='file']"))
    )
    upload_button.send_keys(CROPPED_IMAGE)
    print("Cropped image uploaded to Monster Mash!")

    time.sleep(5)
    
    inflate_button = driver.find_element(By.XPATH, "//button[contains(text(), 'Inflate')]")
    inflate_button.click()
    print("Inflate button clicked!")

    time.sleep(10)

    export_button = driver.find_element(By.XPATH, "//button[contains(text(), 'Download')]")
    export_button.click()
    print(f"3D Model saved: {MONSTER_MASH_MODEL}")

    time.sleep(5)

### Run Automation
download_europeana_image()
segment_image()
upload_to_monster_mash()

driver.quit()
print("Safari Automation Completed!")
