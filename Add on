bl_info = {
    "name": " Europeana Image Importer",
    "blender": (2, 80, 0),
    "category": "Import-Export",
}

import bpy
import requests
import os
from bpy_extras.image_utils import load_image
from mathutils import Vector

# Directory to save images
SAVE_DIR = bpy.app.tempdir

class ImportImageFromAPI(bpy.types.Operator):
    """Fetch Image from API and Import as Plane"""
    bl_idname = "object.import_image_api"
    bl_label = "Import Image from API"
    bl_options = {'REGISTER', 'UNDO'}

    api_url: bpy.props.StringProperty(
        name="API URL",
        description="API URL",
        default="API URL"
    )

    def execute(self, context):
        # Fetch image from API
        image_path = self.download_image(self.api_url)
        if not image_path:
            self.report({'ERROR'}, "Failed to fetch image")
            return {'CANCELLED'}
        

    def download_image(self, url):
        """Downloads image from the API and saves it locally"""
        try:
            response = requests.get(url, stream=True)
            if response.status_code == 200:
                img_name = "imported_image.jpg"
                img_path = os.path.join(SAVE_DIR, img_name)

                with open(img_path, "wb") as f:
                    for chunk in response.iter_content(1024):
                        f.write(chunk)

                return img_path
        except Exception as e:
            print(f"Error downloading image: {e}")
        return None

class IMAGEAPI_PT_Panel(bpy.types.Panel):
    """Creates a Panel in the Object properties window"""
    bl_label = "Europeana Image Importer"
    bl_idname = "IMAGEAPI_PT_panel"
    bl_space_type = 'VIEW_3D'
    bl_region_type = 'UI'
    bl_category = "Tool"

    def draw(self, context):
        layout = self.layout
        layout.label(text="Fetch Image from API")
        layout.operator("object.import_image_api", text="Import Europeana Image")

def register():
    bpy.utils.register_class(ImportImageFromAPI)
    bpy.utils.register_class(IMAGEAPI_PT_Panel)

def unregister():
    bpy.utils.unregister_class(ImportImageFromAPI)
    bpy.utils.unregister_class(IMAGEAPI_PT_Panel)

if __name__ == "__main__":
    register()
